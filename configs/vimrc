" Dependencies you might want to install
" $ sudo apt-get install vim-gui-common
" $ sudo apt-get install vim-runtime

set nu                " Show line numbers
set linebreak         " Break lines at word
set showbreak=+++     " Wrap-broken line prefix
set showmatch         " Highlight matching brace
set visualbell        " Use visual bell (no beeping)
set nospell           " Enable spell-checking
set noerrorbells      " no bells in terminal

set hlsearch          " Highlight all search results
set smartcase         " Enable smart-case search
set ignorecase        " Always case-insensitive
set incsearch         " Incremental search
set wrapscan

set softtabstop=2
set tabstop=2
set shiftwidth=2
set textwidth=80      " Line wrap (number of columns)
set expandtab
set backspace=2

" this should get best indenting for most common filetypes
filetype on
filetype indent plugin on
set autoindent
set smartindent

" display
set scrolloff=5       " scroll offset, min lines above/below cursor
set scrolljump=5      " jump 5 lines when running out of the screen
set sidescroll=10     " minimum columns to scroll horizontally
set showcmd           " show command status
set showmatch         " flashes matching paren when one is typed
set showmode          " show editing mode in status (-- INSERT --)
set ruler             " show cursor position

" Advanced
set ruler
set undolevels=1000   " number of undos stored
set viminfo='50,"50   " '=marks for x files, "=registers for x files
" set backspace=indent,eol,start
set noautowriteall      " Auto write all changes

" Keep some stuff in the history
set history=1000

" Automatically read a file that has changed on disk
set noautoread

" Do not highlight the current line and column
set nocursorline
set nocursorcolumn

" Highlight unwanted spaces
let c_space_errors=1

" Enable 80 column line
set colorcolumn=+1
set colorcolumn=+1,+2
highlight ColorColumn ctermbg=grey guibg=grey

" Remember last position of cursor in a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ";"
let g:mapleader = ";"

" Fast saving and save+close
nmap <leader>w :w<cr><cr>
nmap <leader>q :wq!<cr>

" Enable color syntax highlighting
syntax on
